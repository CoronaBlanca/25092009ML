local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
local Window = DrRayLibrary:Load("Galaxy Hub", "By Sherya")

local mainTab = DrRayLibrary.newTab("Main", "ImageIdHere")
local farmTab = DrRayLibrary.newTab("Farm", "ImageIdHere")
local miscTab = DrRayLibrary.newTab("Misc", "ImageIdHere")
local killerTab = DrRayLibrary.newTab("Killer", "ImageIdHere")
local playersTab = DrRayLibrary.newTab("Teleport", "ImageIdHere")

local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local startTime = os.time()
local startRebirths = player.leaderstats.Rebirths.Value
local displayName = player.DisplayName

mainTab.newLabel("Auto Brawls")

-- God Mode Toggle
local godModeToggle = false
mainTab.newToggle("God Mode (Brawl)", "Enables god mode in brawls", false, function(State)
    godModeToggle = State
    if State then
        task.spawn(function()
            while godModeToggle do
                pcall(function()
                    ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                end)
                task.wait(0.1)
            end
        end)
    end
end)

-- Auto Win Brawls
mainTab.newToggle("Auto Win Brawls", "Automatically wins brawls", false, function(bool)
    getgenv().autoWinBrawl = bool

    local function equipPunch()
        if not getgenv().autoWinBrawl then return false end
        local character = player.Character
        if not character then return false end
        if character:FindFirstChild("Punch") then return true end
        
        local backpack = player.Backpack
        if not backpack then return false end
        
        for _, tool in pairs(backpack:GetChildren()) do
            if tool.ClassName == "Tool" and tool.Name == "Punch" then
                tool.Parent = character
                return true
            end
        end
        return false
    end

    local function isValidTarget(targetPlayer)
        if not targetPlayer or not targetPlayer.Parent then return false end
        if targetPlayer == player then return false end
        if _G.whitelistedPlayers and table.find(_G.whitelistedPlayers, targetPlayer.Name) then return false end
        
        local character = targetPlayer.Character
        if not character or not character.Parent then return false end
        
        local humanoid = character:FindFirstChild("Humanoid")
        if not humanoid then return false end
        if not humanoid.Health or humanoid.Health <= 0 then return false end
        if humanoid:GetState() == Enum.HumanoidStateType.Dead then return false end
        
        local rootPart = character:FindFirstChild("HumanoidRootPart")
        if not rootPart or not rootPart.Parent then return false end
        
        return true
    end

    local function isLocalPlayerReady()
        if not player then return false end
        local character = player.Character
        if not character or not character.Parent then return false end
        
        local humanoid = character:FindFirstChild("Humanoid")
        if not humanoid or humanoid.Health <= 0 then return false end
        
        local leftHand = character:FindFirstChild("LeftHand")
        local rightHand = character:FindFirstChild("RightHand")
        return (leftHand ~= nil or rightHand ~= nil)
    end

    local function safeTouchInterest(targetPart, localPart)
        if not targetPart or not targetPart.Parent then return false end
        if not localPart or not localPart.Parent then return false end
        
        local success = pcall(function()
            firetouchinterest(targetPart, localPart, 0)
            task.wait(0.01)
            firetouchinterest(targetPart, localPart, 1)
        end)
        return success
    end

    if bool then
        -- Auto join brawls
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.5) do
                if not getgenv().autoWinBrawl then break end
                pcall(function()
                    if player.PlayerGui.gameGui.brawlJoinLabel.Visible then
                        ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                        player.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                    end
                end)
            end
        end)

        -- Auto equip punch
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.5) do
                if not getgenv().autoWinBrawl then break end
                equipPunch()
            end
        end)

        -- Auto punch
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.1) do
                if not getgenv().autoWinBrawl then break end
                if isLocalPlayerReady() and ReplicatedStorage.brawlInProgress.Value then
                    pcall(function() 
                        player.muscleEvent:FireServer("punch", "rightHand") 
                    end)
                    pcall(function() 
                        player.muscleEvent:FireServer("punch", "leftHand") 
                    end)
                end
            end
        end)

        -- Touch detection for damage
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.05) do
                if not getgenv().autoWinBrawl then break end
                if isLocalPlayerReady() and ReplicatedStorage.brawlInProgress.Value then
                    local character = player.Character
                    local leftHand = character:FindFirstChild("LeftHand")
                    local rightHand = character:FindFirstChild("RightHand")
                    
                    for _, targetPlayer in pairs(Players:GetPlayers()) do
                        if not getgenv().autoWinBrawl then break end
                        pcall(function()
                            if isValidTarget(targetPlayer) then
                                local targetRoot = targetPlayer.Character.HumanoidRootPart
                                if leftHand then
                                    safeTouchInterest(targetRoot, leftHand)
                                end
                                if rightHand then
                                    safeTouchInterest(targetRoot, rightHand)
                                end
                            end
                        end)
                        task.wait(0.01)
                    end
                end
            end
        end)
    end
end)

-- Auto Join Brawls (separate toggle)
mainTab.newToggle("Auto Join Brawls", "Automatically joins brawls", false, function(bool)
    getgenv().autoJoinBrawl = bool
    if bool then
        task.spawn(function()
            while getgenv().autoJoinBrawl and task.wait(0.5) do
                if not getgenv().autoJoinBrawl then break end
                pcall(function()
                    if player.PlayerGui.gameGui.brawlJoinLabel.Visible then
                        ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                        player.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                    end
                end)
            end
        end)
    end
end)

mainTab.newLabel("Jungle Gym")

-- Helper functions for Jungle Gym
local function pressE()
    VIM:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    VIM:SendKeyEvent(false, "E", false, game)
end

local function autoLift()
    while getgenv().working do
        LocalPlayer.muscleEvent:FireServer("rep")
        task.wait() -- More efficient than task.wait(0) or task.wait(small number)
    end
end

local function teleportAndStart(machineName, position)
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = position
        task.wait(0.1)
        pressE()
        task.spawn(autoLift) -- Use task.spawn to prevent UI freezing
    end
end

-- Jungle Gym Bench Press
mainTab.newToggle("Jungle Bench Press", "Automatically Bench Press", false, function(bool)
    if getgenv().working and not bool then
        getgenv().working = false
        return
    end
    
    getgenv().working = bool
    if bool then
        teleportAndStart("Bench Press", CFrame.new(-8173, 64, 1898))
    end
end)

-- Jungle Gym Squat
mainTab.newToggle("Jungle Squat", "Automatically Squat", false, function(bool)
    if getgenv().working and not bool then
        getgenv().working = false
        return
    end
    
    getgenv().working = bool
    if bool then
        teleportAndStart("Squat", CFrame.new(-8352, 34, 2878))
    end
end)

-- Jungle Gym Pull Up
mainTab.newToggle("Jungle Pull Up", "Automatically Pull Up", false, function(bool)
    if getgenv().working and not bool then
        getgenv().working = false
        return
    end
    
    getgenv().working = bool
    if bool then
        teleportAndStart("Pull Up", CFrame.new(-8666, 34, 2070))
    end
end)

-- Jungle Gym Boulder
mainTab.newToggle("Jungle Boulder", "Automatically Boulder", false, function(bool)
    if getgenv().working and not bool then
        getgenv().working = false
        return
    end
    
    getgenv().working = bool
    if bool then
        teleportAndStart("Boulder", CFrame.new(-8621, 34, 2684))
    end
end)

mainTab.newLabel("Auto Snacks")

local autoEatBoostsEnabled = false
local boostsList = {
    "ULTRA Shake",
    "TOUGH Bar", 
    "Protein Shake",
    "Energy Shake",
    "Protein Bar",
    "Energy Bar",
    "Tropical Shake"
}

local function eatAllBoosts()
    local player = game.Players.LocalPlayer
    local backpack = player:WaitForChild("Backpack")
    local character = player.Character or player.CharacterAdded:Wait()
    
    for _, boostName in ipairs(boostsList) do
        local boost = backpack:FindFirstChild(boostName)
        while boost do
            boost.Parent = character
            pcall(function()
                boost:Activate()
            end)
            task.wait(0.1)
            boost = backpack:FindFirstChild(boostName)
        end
    end
end

task.spawn(function()
    while true do
        if autoEatBoostsEnabled then
            eatAllBoosts()
            task.wait(2)
        else
            task.wait(1)
        end
    end
end)

mainTab.newToggle("Auto Clear Inventory", "Automatically eats all boosts/shakes", false, function(state)
    autoEatBoostsEnabled = state
end)

-- Auto Eat Protein Egg (Every 30 Minutes)
local autoEatEnabled = false

local function eatProteinEgg()
    local player = game.Players.LocalPlayer
    local backpack = player:WaitForChild("Backpack")
    local character = player.Character or player.CharacterAdded:Wait()
    
    local egg = backpack:FindFirstChild("Protein Egg")
    if egg then
        egg.Parent = character
        pcall(function()
            egg:Activate()
        end)
    end
end

task.spawn(function()
    while true do
        if autoEatEnabled then
            eatProteinEgg()
            task.wait(1800) -- 30 minutes = 1800 seconds
        else
            task.wait(1)
        end
    end
end)

mainTab.newToggle("Auto Eat Egg 30 Minutes", "Automatically eats Protein Egg every 30 minutes", false, function(state)
    autoEatEnabled = state
end)

mainTab.newLabel("OP Things/Farms")

-- Lock Position Toggle
mainTab.newToggle("Lock Position", "Locks your character position", false, function(Value)
    if Value then
        local currentPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
        getgenv().posLock = game:GetService("RunService").Heartbeat:Connect(function()
            if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentPos
            end
        end)
    else
        if getgenv().posLock then
            getgenv().posLock:Disconnect()
            getgenv().posLock = nil
        end
    end
end)

-- Anti Knockback Toggle
mainTab.newToggle("Anti Knockback", "Prevents knockback effects", false, function(Value)
    if Value then
        local playerName = game.Players.LocalPlayer.Name
        local rootPart = game.Workspace:FindFirstChild(playerName):FindFirstChild("HumanoidRootPart")
        if rootPart then
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 0, 100000)
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.P = 1250
            bodyVelocity.Parent = rootPart
            getgenv().antiKnockbackBody = bodyVelocity
        end
    else
        if getgenv().antiKnockbackBody then
            getgenv().antiKnockbackBody:Destroy()
            getgenv().antiKnockbackBody = nil
        end
    end
end)

-- Delete All Frames Toggle
mainTab.newToggle("Delete All Frames", "Removes frame objects from ReplicatedStorage", false, function(state)
    if state then
        local rSto = game:GetService("ReplicatedStorage")
        for _, obj in pairs(rSto:GetChildren()) do
            if obj.Name:match("Frame$") and obj:IsA("GuiObject") then
                obj:Destroy()
            end
        end
    end
end)

local StarterGui = game:GetService("StarterGui")

-- Variables globales
_G.antiAFK = false
_G.autoWeight = false
_G.autoPushups = false
_G.autoHandstands = false
_G.autoSitups = false
_G.autoPunch = false
_G.fastTools = false
_G.targetRebirthActive = false
_G.infiniteRebirthActive = false
_G.autoSizeActive = false
_G.teleportActive = false

mainTab.newToggle("Anti AFK", "Evita que te desconecten", function(Value)
    _G.antiAFK = Value
    if Value then
        Players.LocalPlayer.Idled:Connect(function()
            game:GetService("VirtualUser"):ClickButton2(Vector2.new())
        end)
        StarterGui:SetCore("SendNotification", {
            Title = "Anti AFK",
            Text = "Activado",
            Duration = 5
        })
    else
        StarterGui:SetCore("SendNotification", {
            Title = "Anti AFK",
            Text = "Desactivado",
            Duration = 5
        })
    end
end)

-- Label principal
farmTab.newLabel("Auto Rocks")

local selectRock = ""
local autoFarm = false

local function getTool()
    local player = Players.LocalPlayer
    for _, tool in pairs(player.Backpack:GetChildren()) do
        if tool.Name == "Punch" and player.Character:FindFirstChild("Humanoid") then
            player.Character.Humanoid:EquipTool(tool)
        end
    end
    player.muscleEvent:FireServer("punch", "leftHand")
    player.muscleEvent:FireServer("punch", "rightHand")
end

local function createRockToggle(name, rockName, neededDurability)
    farmTab.newToggle(name, "Auto farm " .. rockName .. " (" .. neededDurability .. " Durabilidad)", function(Value)
        selectRock = rockName
        autoFarm = Value

        if Value then
            spawn(function()
                while autoFarm do
                    wait(0.1)
                    local player = Players.LocalPlayer
                    if player.Durability.Value >= neededDurability then
                        for _, v in pairs(game.Workspace.machinesFolder:GetDescendants()) do
                            if v.Name == "neededDurability" and v.Value == neededDurability then
                                if player.Character:FindFirstChild("LeftHand") and player.Character:FindFirstChild("RightHand") then
                                    firetouchinterest(v.Parent.Rock, player.Character.RightHand, 0)
                                    firetouchinterest(v.Parent.Rock, player.Character.RightHand, 1)
                                    firetouchinterest(v.Parent.Rock, player.Character.LeftHand, 0)
                                    firetouchinterest(v.Parent.Rock, player.Character.LeftHand, 1)
                                    getTool()
                                end
                            end
                        end
                    end
                end
            end)
        end
    end)
end

-- Crear toggles para cada roca
createRockToggle("Tiny Rock", "Tiny Island Rock", 0)
createRockToggle("Starter Rock", "Starter Island Rock", 100)
createRockToggle("Legend Beach Rock", "Legend Beach Rock", 5000)
createRockToggle("Frozen Rock", "Frost Gym Rock", 150000)
createRockToggle("Mythical Rock", "Mythical Gym Rock", 400000)
createRockToggle("Eternal Rock", "Eternal Gym Rock", 750000)
createRockToggle("Legend Rock", "Legend Gym Rock", 1000000)
createRockToggle("Muscle King Rock", "Muscle King Gym Rock", 5000000)
createRockToggle("Jungle Rock", "Ancient Jungle Rock", 10000000)

-- Label arriba de todo
farmTab.newLabel("Auto Equip Tools")

local function equipTool(toolName)
    local player = Players.LocalPlayer
    local tool = player.Backpack:FindFirstChild(toolName)
    if tool then
        tool.Parent = player.Character
    end
end

local function unequipTool(toolName)
    local player = Players.LocalPlayer
    local tool = player.Character:FindFirstChild(toolName)
    if tool then
        tool.Parent = player.Backpack
    end
end

farmTab.newToggle("Auto Weight", "Levanta pesas automáticamente", function(Value)
    _G.autoWeight = Value
    if Value then equipTool("Weight") else unequipTool("Weight") end
    task.spawn(function()
        while _G.autoWeight do
            ReplicatedStorage.rEvents.muscleEvent:FireServer("rep")
            task.wait(0.1)
        end
    end)
end)

farmTab.newToggle("Auto Pushups", "Haz flexiones automáticamente", function(Value)
    _G.autoPushups = Value
    if Value then equipTool("Pushups") else unequipTool("Pushups") end
    task.spawn(function()
        while _G.autoPushups do
            ReplicatedStorage.rEvents.muscleEvent:FireServer("rep")
            task.wait(0.1)
        end
    end)
end)

farmTab.newToggle("Auto Handstands", "Haz paradas de manos automáticamente", function(Value)
    _G.autoHandstands = Value
    if Value then equipTool("Handstands") else unequipTool("Handstands") end
    task.spawn(function()
        while _G.autoHandstands do
            ReplicatedStorage.rEvents.muscleEvent:FireServer("rep")
            task.wait(0.1)
        end
    end)
end)

farmTab.newToggle("Auto Situps", "Haz abdominales automáticamente", function(Value)
    _G.autoSitups = Value
    if Value then equipTool("Situps") else unequipTool("Situps") end
    task.spawn(function()
        while _G.autoSitups do
            ReplicatedStorage.rEvents.muscleEvent:FireServer("rep")
            task.wait(0.1)
        end
    end)
end)

farmTab.newToggle("Auto Punch", "Golpea automáticamente", function(Value)
    _G.autoPunch = Value
    if Value then equipTool("Punch") else unequipTool("Punch") end
    task.spawn(function()
        while _G.autoPunch do
            local player = Players.LocalPlayer
            player.muscleEvent:FireServer("punch", "rightHand")
            player.muscleEvent:FireServer("punch", "leftHand")
            task.wait(0.05)
        end
    end)
end)

farmTab.newToggle("Fast Tools", "Acelera todas las herramientas", function(Value)
    _G.fastTools = Value
    local speeds = {
        {"Punch", "attackTime", Value and 0 or 0.35},
        {"Weight", "repTime", Value and 0 or 1},
        {"Pushups", "repTime", Value and 0 or 1},
        {"Situps", "repTime", Value and 0 or 1},
        {"Handstands", "repTime", Value and 0 or 1}
    }
    local player = Players.LocalPlayer
    for _, toolInfo in ipairs(speeds) do
        local tool = player.Backpack:FindFirstChild(toolInfo[1])
        if tool and tool:FindFirstChild(toolInfo[2]) then
            tool[toolInfo[2]].Value = toolInfo[3]
        end
        local charTool = player.Character and player.Character:FindFirstChild(toolInfo[1])
        if charTool and charTool:FindFirstChild(toolInfo[2]) then
            charTool[toolInfo[2]].Value = toolInfo[3]
        end
    end
end)

-- Label para separar sección
farmTab.newLabel("Auto Rebirths & Utilities")

local targetRebirthValue = 0
local targetSwitch, infiniteSwitch

farmTab.newTextBox("Rebirth Target", function(Text)
    local num = tonumber(Text)
    if num and num > 0 then
        targetRebirthValue = num
        StarterGui:SetCore("SendNotification", {
            Title = "Objetivo Actualizado",
            Text = "Nuevo objetivo: "..tostring(targetRebirthValue),
            Duration = 5
        })
    else
        StarterGui:SetCore("SendNotification", {
            Title = "Entrada Inválida",
            Text = "Ingresa un número válido mayor que 0",
            Duration = 5
        })
    end
end)

targetSwitch = farmTab.newToggle("Auto Rebirth Target", "Renacimiento automático hasta alcanzar objetivo", function(Value)
    _G.targetRebirthActive = Value
    if Value then
        if _G.infiniteRebirthActive and infiniteSwitch then
            infiniteSwitch:Set(false)
            _G.infiniteRebirthActive = false
        end
        spawn(function()
            while _G.targetRebirthActive do
                local current = Players.LocalPlayer.leaderstats.Rebirths.Value
                if current >= targetRebirthValue then
                    targetSwitch:Set(false)
                    _G.targetRebirthActive = false
                    StarterGui:SetCore("SendNotification", {
                        Title = "¡Objetivo Alcanzado!",
                        Text = "Has alcanzado "..tostring(targetRebirthValue).." renacimientos",
                        Duration = 5
                    })
                    break
                end
                ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                wait(0.1)
            end
        end)
    end
end)

infiniteSwitch = farmTab.newToggle("Auto Rebirth (Infinite)", "Renacimiento continuo sin parar", function(Value)
    _G.infiniteRebirthActive = Value
    if Value then
        if _G.targetRebirthActive and targetSwitch then
            targetSwitch:Set(false)
            _G.targetRebirthActive = false
        end
        spawn(function()
            while _G.infiniteRebirthActive do
                ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                wait(0.1)
            end
        end)
    end
end)

farmTab.newToggle("Auto Size 1", "Mantener tamaño en 1", function(Value)
    _G.autoSizeActive = Value
    if Value then
        spawn(function()
            while _G.autoSizeActive do
                ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSize",1)
                wait()
            end
        end)
    end
end)

farmTab.newToggle("Auto Teleport to Muscle King", "Teletransporte continuo", function(Value)
    _G.teleportActive = Value
    if Value then
        spawn(function()
            while _G.teleportActive do
                if Players.LocalPlayer.Character then
                    Players.LocalPlayer.Character:MoveTo(Vector3.new(-8646,17,-5738))
                end
                wait()
            end
        end)
    end
end)

-- Sección Gift
farmTab.newLabel("Gift Snacks")

local selectedPlayerEgg = nil
local eggCount = 0

local playerDropdownEgg = farmTab.newDropdown("Choose Player (Eggs)", function(name)
    selectedPlayerEgg = Players:FindFirstChild(name)
end)

for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= Players.LocalPlayer then
        playerDropdownEgg:Add(plr.Name)
    end
end

Players.PlayerAdded:Connect(function(plr)
    if plr ~= Players.LocalPlayer then
        playerDropdownEgg:Add(plr.Name)
    end
end)

farmTab.newTextBox("Amount (Eggs)", function(Text)
    eggCount = tonumber(Text)
end)

farmTab.newButton("Start Egg Gifting", function()
    if selectedPlayerEgg and eggCount and eggCount > 0 then
        for i = 1, eggCount do
            ReplicatedStorage.rEvents.giftRemote:InvokeServer("giftRequest", selectedPlayerEgg, Players.LocalPlayer.consumablesFolder:FindFirstChild("Protein Egg"))
        end
    end
end)

farmTab.newLabel("Shake Gifter").TextSize = 22

local selectedPlayerShake = nil
local shakeCount = 0

local playerDropdownShake = farmTab.newDropdown("Choose Player (Shakes)", function(name)
    selectedPlayerShake = Players:FindFirstChild(name)
end)

for _, plr in ipairs(Players:GetPlayers()) do
    if plr ~= Players.LocalPlayer then
        playerDropdownShake:Add(plr.Name)
    end
end

Players.PlayerAdded:Connect(function(plr)
    if plr ~= Players.LocalPlayer then
        playerDropdownShake:Add(plr.Name)
    end
end)

farmTab.newTextBox("Amount (Shakes)", function(Text)
    shakeCount = tonumber(Text)
end)

farmTab.newButton("Start Shake Gifting", function()
    if selectedPlayerShake and shakeCount and shakeCount > 0 then
        for i = 1, shakeCount do
            ReplicatedStorage.rEvents.giftRemote:InvokeServer("giftRequest", selectedPlayerShake, Players.LocalPlayer.consumablesFolder:FindFirstChild("Tropical Shake"))
        end
    end
end)

farmTab.newLabel("Note: Jungle Captain Obligatorio")
