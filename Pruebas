-- Fixed Galaxy Hub Script
local DrRayLibrary = loadstring(game:HttpGet("https://raw.githubusercontent.com/AZYsGithub/DrRay-UI-Library/main/DrRay.lua"))()
local Window = DrRayLibrary:Load("Galaxy Hub", "By Sherya")

-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Workspace = game:GetService("Workspace")

-- Variables
local LocalPlayer = Players.LocalPlayer
local farmTab = DrRayLibrary.newTab("Farm", "ImageIdHere")

-- Global Variables
getgenv().autoFarm = false
_G.AutoWeight = false
_G.AutoPushups = false
_G.AutoHandstands = false
_G.AutoSitups = false
_G.fastHitActive = false
_G.FastTools = false
_G.targetRebirthActive = false
_G.infiniteRebirthActive = false
_G.autoSizeActive = false
_G.teleportActive = false

-- GUI Labels
farmTab.newLabel("Auto Rocks")

-- Improved tool function
function gettool()
    local backpack = LocalPlayer.Backpack
    local character = LocalPlayer.Character
    
    if not character or not character:FindFirstChild("Humanoid") then return end
    
    local punch = backpack:FindFirstChild("Punch")
    if punch then
        character.Humanoid:EquipTool(punch)
        wait(0.1) -- Small delay to ensure equip
    end
    
    -- Fire punch events safely
    pcall(function()
        LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
        LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
    end)
end

-- Rock farming data
local rockData = {
    {name = "Tiny Rock", displayName = "Tiny Island Rock", durability = 0},
    {name = "Starter Rock", displayName = "Starter Island Rock", durability = 100},
    {name = "Legend Beach Rock", displayName = "Legend Beach Rock", durability = 5000},
    {name = "Frozen Rock", displayName = "Frost Gym Rock", durability = 150000},
    {name = "Mythical Rock", displayName = "Mythical Gym Rock", durability = 400000},
    {name = "Eternal Rock", displayName = "Eternal Gym Rock", durability = 750000},
    {name = "Legend Rock", displayName = "Legend Gym Rock", durability = 1000000},
    {name = "Muscle King Rock", displayName = "Muscle King Gym Rock", durability = 5000000},
    {name = "Jungle Rock", displayName = "Ancient Jungle Rock", durability = 10000000}
}

-- Create rock farming toggles
for _, rock in ipairs(rockData) do
    farmTab.newToggle(rock.name, "Auto farm " .. rock.displayName .. " (" .. rock.durability .. " Durability)", function()
        getgenv().autoFarm = not getgenv().autoFarm
        
        if getgenv().autoFarm then
            task.spawn(function()
                while getgenv().autoFarm do
                    task.wait(0.1)
                    if not getgenv().autoFarm then break end
                    
                    -- Safety checks
                    if not LocalPlayer.Character then continue end
                    if not LocalPlayer.Character:FindFirstChild("LeftHand") or not LocalPlayer.Character:FindFirstChild("RightHand") then continue end
                    
                    local playerDurability = LocalPlayer:FindFirstChild("Durability")
                    if not playerDurability or playerDurability.Value < rock.durability then continue end
                    
                    -- Find and interact with rocks
                    local machinesFolder = Workspace:FindFirstChild("machinesFolder")
                    if machinesFolder then
                        for _, v in pairs(machinesFolder:GetDescendants()) do
                            if v.Name == "neededDurability" and v.Value == rock.durability then
                                local rockPart = v.Parent:FindFirstChild("Rock")
                                if rockPart then
                                    -- Safe touch interaction
                                    pcall(function()
                                        firetouchinterest(rockPart, LocalPlayer.Character.RightHand, 0)
                                        firetouchinterest(rockPart, LocalPlayer.Character.RightHand, 1)
                                        firetouchinterest(rockPart, LocalPlayer.Character.LeftHand, 0)
                                        firetouchinterest(rockPart, LocalPlayer.Character.LeftHand, 1)
                                    end)
                                    gettool()
                                    break -- Exit loop after finding first valid rock
                                end
                            end
                        end
                    end
                end
            end)
            print(rock.name .. " activado")
        else
            print(rock.name .. " desactivado")
        end
    end)
end

-- Auto Equip Tools Section
farmTab.newLabel("Auto Equip Tools")

-- Fixed Gamepass AutoLift
farmTab.newButton("Gamepass AutoLift", "Desbloquea el gamepass de AutoLift gratis", function()
    pcall(function()
        local gamepassFolder = ReplicatedStorage:FindFirstChild("gamepassIds")
        local ownedGamepasses = LocalPlayer:FindFirstChild("ownedGamepasses")
        
        if gamepassFolder and ownedGamepasses then
            for _, gamepass in pairs(gamepassFolder:GetChildren()) do
                if not ownedGamepasses:FindFirstChild(gamepass.Name) then
                    local value = Instance.new("IntValue")
                    value.Name = gamepass.Name
                    value.Value = gamepass.Value
                    value.Parent = ownedGamepasses
                end
            end
            print("Gamepass AutoLift desbloqueado!")
        end
    end)
end)

-- Exercise functions
local function createExerciseToggle(toolName, displayName, globalVar)
    farmTab.newToggle("Auto " .. displayName, displayName .. " automáticamente", function()
        _G[globalVar] = not _G[globalVar]
        
        if _G[globalVar] then
            local tool = LocalPlayer.Backpack:FindFirstChild(toolName)
            if tool then
                LocalPlayer.Character.Humanoid:EquipTool(tool)
            end
            
            task.spawn(function()
                while _G[globalVar] do
                    if not _G[globalVar] then break end
                    pcall(function()
                        LocalPlayer.muscleEvent:FireServer("rep")
                    end)
                    task.wait(0.1)
                end
            end)
            print("Auto " .. displayName .. " activado")
        else
            local character = LocalPlayer.Character
            if character then
                local equipped = character:FindFirstChild(toolName)
                if equipped then
                    equipped.Parent = LocalPlayer.Backpack
                end
            end
            print("Auto " .. displayName .. " desactivado")
        end
    end)
end

-- Create exercise toggles
createExerciseToggle("Weight", "Weight", "AutoWeight")
createExerciseToggle("Pushups", "Pushups", "AutoPushups")
createExerciseToggle("Handstands", "Handstands", "AutoHandstands")
createExerciseToggle("Situps", "Situps", "AutoSitups")

-- Auto Punch Toggle (Fixed)
farmTab.newToggle("Auto Punch", "Golpea automáticamente", function()
    _G.fastHitActive = not _G.fastHitActive
    
    if _G.fastHitActive then
        task.spawn(function()
            while _G.fastHitActive do
                if not _G.fastHitActive then break end
                
                local punch = LocalPlayer.Backpack:FindFirstChild("Punch")
                if punch and LocalPlayer.Character then
                    punch.Parent = LocalPlayer.Character
                    if punch:FindFirstChild("attackTime") then
                        punch.attackTime.Value = 0
                    end
                end
                task.wait(0.1)
            end
        end)
        
        task.spawn(function()
            while _G.fastHitActive do
                if not _G.fastHitActive then break end
                
                pcall(function()
                    LocalPlayer.muscleEvent:FireServer("punch", "rightHand")
                    LocalPlayer.muscleEvent:FireServer("punch", "leftHand")
                    
                    local character = LocalPlayer.Character
                    if character then
                        local punchTool = character:FindFirstChild("Punch")
                        if punchTool then
                            punchTool:Activate()
                        end
                    end
                end)
                task.wait()
            end
        end)
        print("Auto Punch activado")
    else
        local character = LocalPlayer.Character
        if character then
            local equipped = character:FindFirstChild("Punch")
            if equipped then
                equipped.Parent = LocalPlayer.Backpack
            end
        end
        print("Auto Punch desactivado")
    end
end)

-- Fast Tools Toggle (Fixed)
farmTab.newToggle("Fast Tools", "Acelera todas las herramientas", function()
    _G.FastTools = not _G.FastTools
    
    local toolSettings = {
        {name = "Punch", stat = "attackTime", fast = 0, normal = 0.35},
        {name = "Ground Slam", stat = "attackTime", fast = 0, normal = 6},
        {name = "Stomp", stat = "attackTime", fast = 0, normal = 7},
        {name = "Handstands", stat = "repTime", fast = 0, normal = 1},
        {name = "Pushups", stat = "repTime", fast = 0, normal = 1},
        {name = "Weight", stat = "repTime", fast = 0, normal = 1},
        {name = "Situps", stat = "repTime", fast = 0, normal = 1}
    }
    
    for _, toolInfo in ipairs(toolSettings) do
        local value = _G.FastTools and toolInfo.fast or toolInfo.normal
        
        -- Check backpack
        local tool = LocalPlayer.Backpack:FindFirstChild(toolInfo.name)
        if tool and tool:FindFirstChild(toolInfo.stat) then
            tool[toolInfo.stat].Value = value
        end
        
        -- Check equipped tools
        if LocalPlayer.Character then
            local equippedTool = LocalPlayer.Character:FindFirstChild(toolInfo.name)
            if equippedTool and equippedTool:FindFirstChild(toolInfo.stat) then
                equippedTool[toolInfo.stat].Value = value
            end
        end
    end
    
    print(_G.FastTools and "Fast Tools activado" or "Fast Tools desactivado")
end)

-- Auto Rebirths Section
farmTab.newLabel("Auto Rebirths")

local targetRebirthValue = 1

farmTab.newTextBox("Rebirth Target", "Ingresa el número objetivo de renacimientos", function(text)
    local newValue = tonumber(text)
    if newValue and newValue > 0 then
        targetRebirthValue = newValue
        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Objetivo Actualizado",
            Text = "Nuevo objetivo: " .. tostring(targetRebirthValue) .. " renacimientos",
            Duration = 3
        })
        print("Objetivo de renacimientos actualizado a: " .. targetRebirthValue)
    else
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Entrada Inválida",
            Text = "Por favor ingresa un número válido mayor que 0",
            Duration = 3
        })
    end
end)

-- Auto Rebirth Target Toggle
farmTab.newToggle("Auto Rebirth Target", "Renacimiento automático hasta alcanzar el objetivo", function()
    _G.targetRebirthActive = not _G.targetRebirthActive
    
    if _G.targetRebirthActive then
        if _G.infiniteRebirthActive then
            _G.infiniteRebirthActive = false
            print("Auto Rebirth Infinite desactivado")
        end
        
        task.spawn(function()
            while _G.targetRebirthActive do
                task.wait(0.1)
                if not _G.targetRebirthActive then break end
                
                local leaderstats = LocalPlayer:FindFirstChild("leaderstats")
                if leaderstats and leaderstats:FindFirstChild("Rebirths") then
                    local currentRebirths = leaderstats.Rebirths.Value
                    
                    if currentRebirths >= targetRebirthValue then
                        _G.targetRebirthActive = false
                        
                        game:GetService("StarterGui"):SetCore("SendNotification", {
                            Title = "¡Objetivo Alcanzado!",
                            Text = "Has alcanzado " .. tostring(targetRebirthValue) .. " renacimientos",
                            Duration = 5
                        })
                        print("¡Objetivo de renacimientos alcanzado! (" .. targetRebirthValue .. ")")
                        break
                    end
                    
                    pcall(function()
                        ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                    end)
                end
            end
        end)
        print("Auto Rebirth Target activado - Objetivo: " .. targetRebirthValue)
    else
        print("Auto Rebirth Target desactivado")
    end
end)

-- Auto Rebirth Infinite Toggle
farmTab.newToggle("Auto Rebirth (Infinite)", "Renacimiento continuo sin parar", function()
    _G.infiniteRebirthActive = not _G.infiniteRebirthActive
    
    if _G.infiniteRebirthActive then
        if _G.targetRebirthActive then
            _G.targetRebirthActive = false
            print("Auto Rebirth Target desactivado")
        end
        
        task.spawn(function()
            while _G.infiniteRebirthActive do
                task.wait(0.1)
                if not _G.infiniteRebirthActive then break end
                
                pcall(function()
                    ReplicatedStorage.rEvents.rebirthRemote:InvokeServer("rebirthRequest")
                end)
            end
        end)
        print("Auto Rebirth Infinite activado")
    else
        print("Auto Rebirth Infinite desactivado")
    end
end)

-- Auto Size 1 Toggle
farmTab.newToggle("Auto Size 1", "Establece el tamaño del personaje a 1 continuamente", function()
    _G.autoSizeActive = not _G.autoSizeActive
    
    if _G.autoSizeActive then
        task.spawn(function()
            while _G.autoSizeActive do
                task.wait(0.1)
                if not _G.autoSizeActive then break end
                
                pcall(function()
                    ReplicatedStorage.rEvents.changeSpeedSizeRemote:InvokeServer("changeSize", 1)
                end)
            end
        end)
        print("Auto Size 1 activado")
    else
        print("Auto Size 1 desactivado")
    end
end)

-- Auto Teleport Toggle
farmTab.newToggle("Auto Teleport to Muscle King", "Teletransporte continuo al Rey Músculo", function()
    _G.teleportActive = not _G.teleportActive
    
    if _G.teleportActive then
        task.spawn(function()
            while _G.teleportActive do
                task.wait(0.1)
                if not _G.teleportActive then break end
                
                if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.new(-8646, 17, -5738)
                end
            end
        end)
        print("Auto Teleport to Muscle King activado")
    else
        print("Auto Teleport to Muscle King desactivado")
    end
end)

-- Stats Button
farmTab.newButton("Show Current Stats", "Muestra las estadísticas actuales del jugador", function()
    local leaderstats = LocalPlayer:FindFirstChild("leaderstats")
    if leaderstats and leaderstats:FindFirstChild("Rebirths") then
        local currentRebirths = leaderstats.Rebirths.Value
        local remaining = math.max(0, targetRebirthValue - currentRebirths)
        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Estadísticas Actuales",
            Text = "Renacimientos: " .. currentRebirths .. " | Objetivo: " .. targetRebirthValue .. " | Restantes: " .. remaining,
            Duration = 5
        })
        
        print("=== ESTADÍSTICAS ACTUALES ===")
        print("Renacimientos actuales: " .. currentRebirths)
        print("Objetivo establecido: " .. targetRebirthValue)
        print("Renacimientos restantes: " .. remaining)
        print("=============================")
    end
end)

-- Gift Snacks Section
farmTab.newLabel("Gift Snacks")

local selectedPlayerEgg = nil
local selectedPlayerShake = nil
local eggCount = 0
local shakeCount = 0

farmTab.newLabel("=== EGG GIFTER ===")
local eggCountLabel = farmTab.newLabel("Protein Eggs: 0")
farmTab.newLabel("=== SHAKE GIFTER ===")
local shakeCountLabel = farmTab.newLabel("Tropical Shakes: 0")

-- Update item count function
local function updateItemCount()
    local proteinEggCount = 0
    local tropicalShakeCount = 0
    local consumablesFolder = LocalPlayer:FindFirstChild("consumablesFolder")
    
    if consumablesFolder then
        for _, item in pairs(consumablesFolder:GetChildren()) do
            if item.Name == "Protein Egg" then
                proteinEggCount = proteinEggCount + 1
            elseif item.Name == "Tropical Shake" then
                tropicalShakeCount = tropicalShakeCount + 1
            end
        end
    end
    
    -- Update labels would need library support
    print("Protein Eggs: " .. proteinEggCount .. " | Tropical Shakes: " .. tropicalShakeCount)
end

-- Start automatic counter
task.spawn(function()
    while true do
        updateItemCount()
        task.wait(1)
    end
end)

-- Get current players function
local function getCurrentPlayers()
    local players = {}
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            table.insert(players, player.Name)
        end
    end
    return #players > 0 and players or {"No players available"}
end

-- Egg gifting section
farmTab.newDropdown("Select Player (Eggs)", getCurrentPlayers(), function(selectedOption)
    selectedPlayerEgg = Players:FindFirstChild(selectedOption)
    if selectedPlayerEgg then
        print("Jugador seleccionado para eggs: " .. selectedOption)
    end
end)

farmTab.newTextBox("Egg Amount", "Cantidad de Protein Eggs a regalar", function(text)
    local amount = tonumber(text)
    if amount and amount > 0 then
        eggCount = amount
        print("Cantidad de eggs establecida: " .. eggCount)
    else
        print("Error: Ingresa un número válido para eggs")
    end
end)

farmTab.newButton("Gift Protein Eggs", "Regala Protein Eggs al jugador seleccionado", function()
    if selectedPlayerEgg and eggCount and eggCount > 0 then
        local consumablesFolder = LocalPlayer:FindFirstChild("consumablesFolder")
        if consumablesFolder then
            local proteinEgg = consumablesFolder:FindFirstChild("Protein Egg")
            if proteinEgg then
                for i = 1, eggCount do
                    pcall(function()
                        ReplicatedStorage.rEvents.giftRemote:InvokeServer("giftRequest", selectedPlayerEgg, proteinEgg)
                    end)
                    task.wait(0.1) -- Small delay between gifts
                end
                
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "Eggs Enviados",
                    Text = "Se enviaron " .. eggCount .. " Protein Eggs a " .. selectedPlayerEgg.Name,
                    Duration = 3
                })
                print("Se enviaron " .. eggCount .. " Protein Eggs a " .. selectedPlayerEgg.Name)
            else
                print("Error: No tienes Protein Eggs disponibles")
            end
        end
    else
        print("Error: Selecciona un jugador y establece una cantidad válida de eggs")
    end
end)

-- Shake gifting section
farmTab.newDropdown("Select Player (Shakes)", getCurrentPlayers(), function(selectedOption)
    selectedPlayerShake = Players:FindFirstChild(selectedOption)
    if selectedPlayerShake then
        print("Jugador seleccionado para shakes: " .. selectedOption)
    end
end)

farmTab.newTextBox("Shake Amount", "Cantidad de Tropical Shakes a regalar", function(text)
    local amount = tonumber(text)
    if amount and amount > 0 then
        shakeCount = amount
        print("Cantidad de shakes establecida: " .. shakeCount)
    else
        print("Error: Ingresa un número válido para shakes")
    end
end)

farmTab.newButton("Gift Tropical Shakes", "Regala Tropical Shakes al jugador seleccionado", function()
    if selectedPlayerShake and shakeCount and shakeCount > 0 then
        local consumablesFolder = LocalPlayer:FindFirstChild("consumablesFolder")
        if consumablesFolder then
            local tropicalShake = consumablesFolder:FindFirstChild("Tropical Shake")
            if tropicalShake then
                for i = 1, shakeCount do
                    pcall(function()
                        ReplicatedStorage.rEvents.giftRemote:InvokeServer("giftRequest", selectedPlayerShake, tropicalShake)
                    end)
                    task.wait(0.1) -- Small delay between gifts
                end
                
                game:GetService("StarterGui"):SetCore("SendNotification", {
                    Title = "Shakes Enviados",
                    Text = "Se enviaron " .. shakeCount .. " Tropical Shakes a " .. selectedPlayerShake.Name,
                    Duration = 3
                })
                print("Se enviaron " .. shakeCount .. " Tropical Shakes a " .. selectedPlayerShake.Name)
            else
                print("Error: No tienes Tropical Shakes disponibles")
            end
        end
    else
        print("Error: Selecciona un jugador y establece una cantidad válida de shakes")
    end
end)

-- Utility buttons
farmTab.newButton("Refresh Players", "Actualiza la lista de jugadores disponibles", function()
    print("=== JUGADORES DISPONIBLES ===")
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer then
            print("- " .. player.Name)
        end
    end
    print("=============================")
end)

farmTab.newButton("Check Inventory", "Verifica tu inventario actual", function()
    local consumablesFolder = LocalPlayer:FindFirstChild("consumablesFolder")
    if consumablesFolder then
        print("=== TU INVENTARIO ===")
        for _, item in pairs(consumablesFolder:GetChildren()) do
            print("- " .. item.Name)
        end
        print("====================")
        
        game:GetService("StarterGui"):SetCore("SendNotification", {
            Title = "Inventario",
            Text = "Revisa la consola para ver tu inventario completo",
            Duration = 3
        })
    end
end)

farmTab.newLabel("")
farmTab.newLabel("⚠️ IMPORTANTE: Jungle Captain Obligatorio ⚠️")

-- Player connection events
Players.PlayerAdded:Connect(function(player)
    if player ~= LocalPlayer then
        print("Nuevo jugador disponible para regalo: " .. player.Name)
    end
end)

Players.PlayerRemoving:Connect(function(player)
    if player == selectedPlayerEgg then
        selectedPlayerEgg = nil
        print("El jugador seleccionado para eggs se desconectó")
    end
    if player == selectedPlayerShake then
        selectedPlayerShake = nil
        print("El jugador seleccionado para shakes se desconectó")
    end
end)

print("Galaxy Hub cargado exitosamente!")
