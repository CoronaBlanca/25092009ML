-- Servicios √∫tiles
local Players = game:GetService("Players")

-- Jugador local (por si la UI lo usa internamente)
local LocalPlayer = Players.LocalPlayer
if LocalPlayer then
    LocalPlayer:FindFirstChild("leaderstats")
end

-- Cargar la interfaz desde GitHub
local _call1 = loadstring(game:HttpGet("https://raw.githubusercontent.com/CoronaBlanca/25092009UI/refs/heads/main/Txkxttk%20L%20By%20Shxryx"))().new({
    Logo = "https://create.roblox.com/store/asset/134528145536607/Galaxy-Icon",
    Title = "Galaxy VXI | New UI Future Updates",
    Description = "https://discord.gg/zYrg2qPjTp",
    Keybind = Enum.KeyCode.LeftControl,
})

--Tabs--

local _call10 = _call1:NewTab({
    Icon = "rbxassetid://134528145536607",
    Description = "Main interface",
    Title = "Main",
})
local _call20 = _call1:NewTab({
    Icon = "rbxassetid://134528145536607",
    Description = "Tool farm",
    Title = "Farm",
})
local _call30 = _call1:NewTab({
    Icon = "rbxassetid://134528145536607",
    Description = "Extra options",
    Title = "Misc",
})
local _call40 = _call1:NewTab({
    Icon = "rbxassetid://134528145536607",
    Description = "Kill multiple players",
    Title = "Killer",
})
local _call50 = _call1:NewTab({
    Icon = "rbxassetid://134528145536607",
    Description = "Crystal Pets & Auras",
    Title = "Crystal",
})
local _call60 = _call1:NewTab({
    Icon = "rbxassetid://134528145536607",
    Description = "Different places",
    Title = "Teleport",
})
local _call70 = _call1:NewTab({
    Icon = "rbxassetid://134528145536607",
    Description = "Cr√©dits | Discord",
    Title = "Credits",
})

-----------------Section Auto Bralws {Main}----------------------

local _call11 = _call10:NewSection({
    Title = "Auto Brawls",
    Icon = "rbxassetid://109333634069157",
    Position = "Left",
})

_call11:NewToggle({
    Title = "God Mode Brawl",
    Default = false,
    Callback = function(State)
        if State then
            task.spawn(function()
                while State do
                    game:GetService("ReplicatedStorage").rEvents.brawlEvent:FireServer("joinBrawl")
                    task.wait(0)
                end
            end)
        end
    end,
})

_call11:NewToggle({
    Title = "Auto Win Brawls",
    Default = false,
    Callback = function(bool)
        getgenv().autoWinBrawl = bool
        
        local Players = game:GetService("Players")
        local player = Players.LocalPlayer

        -- Equip Punch Tool
        local function equipPunch()
            if not getgenv().autoWinBrawl then return end
            local character = player.Character
            if not character then return false end
            if character:FindFirstChild("Punch") then return true end
            local backpack = player.Backpack
            if not backpack then return false end
            for _, tool in pairs(backpack:GetChildren()) do
                if tool.ClassName == "Tool" and tool.Name == "Punch" then
                    tool.Parent = character
                    return true
                end
            end
            return false
        end

        local function isValidTarget(target)
            if not target or not target.Parent then return false end
            if target == player then return false end
            local character = target.Character
            if not character then return false end
            local humanoid = character:FindFirstChild("Humanoid")
            if not humanoid or humanoid.Health <= 0 then return false end
            if humanoid:GetState() == Enum.HumanoidStateType.Dead then return false end
            local root = character:FindFirstChild("HumanoidRootPart")
            if not root then return false end
            return true
        end

        local function isLocalReady()
            local char = player.Character
            if not char then return false end
            local hum = char:FindFirstChild("Humanoid")
            if not hum or hum.Health <= 0 then return false end
            return (char:FindFirstChild("LeftHand") or char:FindFirstChild("RightHand"))
        end

        local function safeTouch(target, localPart)
            if not target or not localPart then return end
            pcall(function()
                firetouchinterest(target, localPart, 0)
                task.wait(0.01)
                firetouchinterest(target, localPart, 1)
            end)
        end

        -- Join brawl automatically
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.5) do
                if player.PlayerGui.gameGui.brawlJoinLabel.Visible then
                    game.ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                    player.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                end
            end
        end)

        -- Keep punch equipped
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.5) do
                equipPunch()
            end
        end)

        -- Punch constantly
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.1) do
                if isLocalReady() and game.ReplicatedStorage.brawlInProgress.Value then
                    pcall(function() player.muscleEvent:FireServer("punch", "rightHand") end)
                    pcall(function() player.muscleEvent:FireServer("punch", "leftHand") end)
                end
            end
        end)

        -- Attack others
        task.spawn(function()
            while getgenv().autoWinBrawl and task.wait(0.05) do
                if isLocalReady() and game.ReplicatedStorage.brawlInProgress.Value then
                    local char = player.Character
                    local left, right = char:FindFirstChild("LeftHand"), char:FindFirstChild("RightHand")
                    for _, target in pairs(Players:GetPlayers()) do
                        if not getgenv().autoWinBrawl then break end
                        pcall(function()
                            if isValidTarget(target) then
                                local root = target.Character:FindFirstChild("HumanoidRootPart")
                                if left then safeTouch(root, left) end
                                if right then safeTouch(root, right) end
                            end
                        end)
                        task.wait(0.01)
                    end
                end
            end
        end)

        -- Recovery system
        task.spawn(function()
            local lastCount, stuck = 0, 0
            while getgenv().autoWinBrawl and task.wait(1) do
                local current = #Players:GetPlayers()
                if current ~= lastCount then
                    stuck = 0
                    lastCount = current
                else
                    stuck += 1
                    if stuck > 5 then
                        stuck = 0
                        pcall(function()
                            local char = player.Character
                            if char and char:FindFirstChild("Punch") then
                                char.Punch.Parent = player.Backpack
                                task.wait(0.1)
                                equipPunch()
                            else
                                equipPunch()
                            end
                        end)
                    end
                end
            end
        end)
    end
})

_call11:NewToggle({
    Title = "Auto Join Brawls",
    Default = false,
    Callback = function(bool)
        getgenv().autoJoinBrawl = bool
        if bool then
            task.spawn(function()
                while getgenv().autoJoinBrawl and task.wait(0.5) do
                    if not getgenv().autoJoinBrawl then break end
                    pcall(function()
                        local player = game.Players.LocalPlayer
                        if player.PlayerGui.gameGui.brawlJoinLabel.Visible then
                            game.ReplicatedStorage.rEvents.brawlEvent:FireServer("joinBrawl")
                            player.PlayerGui.gameGui.brawlJoinLabel.Visible = false
                        end
                    end)
                end
            end)
        end
    end,
})

-----------------Section Jungle Gym {Main}----------------------

local _call12 = _call10:NewSection({
    Title = "Jungle Gym",
    Icon = "rbxassetid://109333634069157",
    Position = "Right",
})

-- Cache services for faster access
local VIM = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- Helper functions for Jungle Gym
local function pressE()
    VIM:SendKeyEvent(true, "E", false, game)
    task.wait(0.1)
    VIM:SendKeyEvent(false, "E", false, game)
end

local function autoLift()
    while getgenv().working do
        LocalPlayer.muscleEvent:FireServer("rep")
        task.wait()
    end
end

local function teleportAndStart(machineName, position)
    local character = LocalPlayer.Character
    if character and character:FindFirstChild("HumanoidRootPart") then
        character.HumanoidRootPart.CFrame = position
        task.wait(0.1)
        pressE()
        task.spawn(autoLift)
    end
end

-- üå¥ Jungle Gym Bench Press
_call12:NewToggle({
    Title = "Jungle Bench Press",
    Default = false,
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Bench Press", CFrame.new(-8173, 64, 1898))
        end
    end,
})

-- üèãÔ∏è Jungle Gym Squat
_call12:NewToggle({
    Title = "Jungle Squat",
    Default = false,
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Squat", CFrame.new(-8352, 34, 2878))
        end
    end,
})

-- üí™ Jungle Gym Pull Ups
_call12:NewToggle({
    Title = "Jungle Pull Ups",
    Default = false,
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Pull Up", CFrame.new(-8666, 34, 2070))
        end
    end,
})

-- ü™® Jungle Gym Boulder
_call12:NewToggle({
    Title = "Jungle Boulder",
    Default = false,
    Callback = function(bool)
        if getgenv().working and not bool then
            getgenv().working = false
            return
        end
        getgenv().working = bool
        if bool then
            teleportAndStart("Boulder", CFrame.new(-8621, 34, 2684))
        end
    end,
})

-----------------Section Auto Gyms {Main}----------------------

local _call13 = _call10:NewSection({
    Title = "Auto Gyms",
    Icon = "rbxassetid://109333634069157",
    Position = "Left",
})

-- üîπ Datos de posiciones de entrenamiento
local workoutPositions = {
    ["Bench Press"] = {
        ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
        ["Legend Gym"] = CFrame.new(4111.91748, 1020.46674, -3799.97217),
        ["Muscle King Gym"] = CFrame.new(-8590.06152, 46.0167427, -6043.34717)
    },
    ["Squat"] = {
        ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
        ["Legend Gym"] = CFrame.new(4304.99023, 987.829956, -4124.2334),
        ["Muscle King Gym"] = CFrame.new(-8940.12402, 13.1642084, -5699.13477)
    },
    ["Deadlift"] = {
        ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
        ["Legend Gym"] = CFrame.new(4304.99023, 987.829956, -4124.2334),
        ["Muscle King Gym"] = CFrame.new(-8940.12402, 13.1642084, -5699.13477)
    },
    ["Pull Up"] = {
        ["Eternal Gym"] = CFrame.new(-7176.19141, 45.394104, -1106.31421),
        ["Legend Gym"] = CFrame.new(4304.99023, 987.829956, -4124.2334),
        ["Muscle King Gym"] = CFrame.new(-8940.12402, 13.1642084, -5699.13477)
    }
}

local workoutTypes = { "Bench Press", "Squat", "Deadlift", "Pull Up" }
local gymLocations = { "Eternal Gym", "Legend Gym", "Muscle King Gym" }

local workoutTranslations = {
    ["Bench Press"] = "Bench Press",
    ["Squat"] = "Squat",
    ["Deadlift"] = "Dead Lift",
    ["Pull Up"] = "Pull Up"
}

local gymToggles = {}

local VIM = game:GetService("VirtualInputManager")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

-- ‚úÖ Nueva funci√≥n de teletransporte confiable
local function teleportTo(position)
    local char = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
    local root = char:WaitForChild("HumanoidRootPart", 5)
    if not root then return end

    -- Desactivar temporalmente la f√≠sica y mover
    local humanoid = char:FindFirstChildOfClass("Humanoid")
    if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.Physics) end

    -- Teletransportar con PivotTo para m√°s estabilidad
    if char:CanSetPrimaryPartCFrame() then
        char:PivotTo(position)
    else
        root.CFrame = position
    end

    -- Reforzar posici√≥n durante unos frames
    for i = 1, 5 do
        task.wait(0.05)
        root.CFrame = position
    end

    if humanoid then humanoid:ChangeState(Enum.HumanoidStateType.RunningNoPhysics) end
end

-- Simular presionar la tecla E
local function pressE()
    VIM:SendKeyEvent(true, Enum.KeyCode.E, false, game)
    task.wait(0.05)
    VIM:SendKeyEvent(false, Enum.KeyCode.E, false, game)
end

-- Entrenamiento autom√°tico
local function autoLift()
    while getgenv().workingGym do
        if LocalPlayer:FindFirstChild("muscleEvent") then
            LocalPlayer.muscleEvent:FireServer("rep")
        end
        task.wait(0.2)
    end
end

-- Teletransportar y comenzar entrenamiento
local function teleportAndStart(workoutType, position)
    teleportTo(position)
    task.wait(0.3)
    pressE()
    task.spawn(autoLift)
end

-- üîπ Crear dropdowns y toggles din√°micamente
for _, workoutType in ipairs(workoutTypes) do
    local spanishWorkoutName = workoutTranslations[workoutType]

    _call13:NewDropdown({
        Title = spanishWorkoutName .. " - Gimnasio",
        Options = gymLocations,
        Callback = function(selected)
            _G["selected" .. string.gsub(workoutType, " ", "") .. "Gym"] = selected
        end,
    })

    gymToggles[workoutType] = _call13:NewToggle({
        Title = spanishWorkoutName,
        Default = false,
        Callback = function(bool)
            getgenv().workingGym = bool
            getgenv().currentWorkoutType = workoutType

            if bool then
                local selectedGym = _G["selected" .. string.gsub(workoutType, " ", "") .. "Gym"] or gymLocations[1]
                local pos = workoutPositions[workoutType] and workoutPositions[workoutType][selectedGym]

                if pos then
                    -- Apagar otros toggles
                    for otherType, otherToggle in pairs(gymToggles) do
                        if otherType ~= workoutType and otherToggle then
                            otherToggle:Set(false)
                        end
                    end
                    teleportAndStart(workoutType, pos)
                else
                    game:GetService("StarterGui"):SetCore("SendNotification", {
                        Title = "Error",
                        Text = "No se encontr√≥ posici√≥n para " .. workoutType .. " en " .. selectedGym,
                        Duration = 5
                    })
                end
            else
                getgenv().workingGym = false
            end
        end,
    })
end

-----------------OP Things/Farms {Main}----------------------

local _call14 = _call10:NewSection({
    Title = "OP Things / Farm",
    Icon = "rbxassetid://109333634069157",
    Position = "Right",
})

_call14:NewToggle({
    Title = "Lock Position",
    Callback = function(Value)
        if Value then
            local currentPos = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            getgenv().posLock = game:GetService("RunService").Heartbeat:Connect(function()
                if game.Players.LocalPlayer.Character:FindFirstChild("HumanoidRootPart") then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = currentPos
                end
            end)
        else
            if getgenv().posLock then
                getgenv().posLock:Disconnect()
                getgenv().posLock = nil
            end
        end
    end
})

_call14:NewToggle({
    Title = "Anti Knockback",
    Callback = function(Value)
        local playerName = game.Players.LocalPlayer.Name
        local rootPart = game.Workspace:FindFirstChild(playerName):FindFirstChild("HumanoidRootPart")
        
        if Value then
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.MaxForce = Vector3.new(100000, 0, 100000)
            bodyVelocity.Velocity = Vector3.new(0, 0, 0)
            bodyVelocity.P = 1250
            bodyVelocity.Parent = rootPart
        else
            local existingVelocity = rootPart:FindFirstChild("BodyVelocity")
            if existingVelocity and existingVelocity.MaxForce == Vector3.new(100000, 0, 100000) then
                existingVelocity:Destroy()
            end
        end
    end
})

-- üßπ Delete All Frames
_call14:NewToggle({
    Title = "Delete All Frames",
    Callback = function(state)
        local rSto = game:GetService("ReplicatedStorage")
        for _, obj in pairs(rSto:GetChildren()) do
            if obj.Name:match("Frame$") and obj:IsA("GuiObject") then
                if state then
                    obj:Destroy()
                end
            end
        end
    end
})

-- üîπ Bot√≥n 1: Anti-AFK simple
_call14:NewButton({
    Title = "Anti AFK",
    Callback = function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        if getgenv().antiAFKConnection then
            getgenv().antiAFKConnection:Disconnect()
            getgenv().antiAFKConnection = nil
            return
        end

        getgenv().antiAFKConnection = LocalPlayer.Idled:Connect(function()
            -- Mover el mouse o presionar tecla virtual
            local VirtualUser = game:GetService("VirtualUser")
            VirtualUser:ClickButton1(Vector2.new())
        end)
    end,
})

-- üîπ Bot√≥n 2: Anti-AFK con GUI
_call14:NewButton({
    Title = "Anti AFK GUI",
    Callback = function()
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local RunService = game:GetService("RunService")
        local StarterGui = game:GetService("StarterGui")

        -- Crear GUI si no existe
        local screenGui = Instance.new("ScreenGui")
        screenGui.Name = "AntiAFK_GUI"
        screenGui.Parent = game.CoreGui

        local frame = Instance.new("Frame")
        frame.Size = UDim2.new(0, 200, 0, 100)
        frame.Position = UDim2.new(0, 20, 0, 20)
        frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
        frame.Parent = screenGui

        local infoLabel = Instance.new("TextLabel")
        infoLabel.Size = UDim2.new(1, -10, 1, -10)
        infoLabel.Position = UDim2.new(0, 5, 0, 5)
        infoLabel.BackgroundTransparency = 1
        infoLabel.TextColor3 = Color3.new(1, 1, 1)
        infoLabel.TextScaled = true
        infoLabel.TextWrapped = true
        infoLabel.Text = "Anti AFK Activo"
        infoLabel.Parent = frame

        -- Variables de sesi√≥n
        local startTime = tick()
        local fps = 0

        -- Conectar Anti-AFK y actualizar GUI
        if getgenv().antiAFKGUIConnection then
            getgenv().antiAFKGUIConnection:Disconnect()
            getgenv().antiAFKGUIConnection = nil
            screenGui:Destroy()
            return
        end

        getgenv().antiAFKGUIConnection = RunService.RenderStepped:Connect(function(deltaTime)
            fps = 1 / deltaTime
            local sessionTime = tick() - startTime
            local minutes = math.floor(sessionTime / 60)
            local seconds = math.floor(sessionTime % 60)
            infoLabel.Text = string.format("Anti-AFK Activo\nTiempo: %02d:%02d\nFPS: %d", minutes, seconds, fps)
        end)

        LocalPlayer.Idled:Connect(function()
            local VirtualUser = game:GetService("VirtualUser")
            VirtualUser:ClickButton1(Vector2.new())
        end)
    end,
})
