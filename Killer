-- 🌌 Galaxy Hub Automático con contador de KILLS reales
local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")

-- Crear ScreenGui
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "GalaxyHubGUI"
screenGui.Parent = PlayerGui

-- Crear Frame principal
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 220, 0, 80)
mainFrame.Position = UDim2.new(0.5, -110, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(60, 0, 80)
mainFrame.BorderSizePixel = 2
mainFrame.Parent = screenGui

-- Texto título
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 0.6, 0)
title.BackgroundTransparency = 1
title.Text = "Galaxy Hub"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.GothamBold
title.TextScaled = true
title.Parent = mainFrame

-- Texto contador de kills
local killCounter = Instance.new("TextLabel")
killCounter.Size = UDim2.new(1, 0, 0.4, 0)
killCounter.Position = UDim2.new(0, 0, 0.6, 0)
killCounter.BackgroundTransparency = 1
killCounter.Text = "Kills: 0"
killCounter.TextColor3 = Color3.fromRGB(255, 255, 255)
killCounter.Font = Enum.Font.Gotham
killCounter.TextScaled = true
killCounter.Parent = mainFrame

-- Animación de contorno
task.spawn(function()
    while task.wait(1) do
        local tween1 = TweenService:Create(mainFrame, TweenInfo.new(1), {BorderColor3 = Color3.fromRGB(128, 0, 255)})
        tween1:Play()
        tween1.Completed:Wait()

        local tween2 = TweenService:Create(mainFrame, TweenInfo.new(1), {BorderColor3 = Color3.fromRGB(0, 0, 0)})
        tween2:Play()
        tween2.Completed:Wait()
    end
end)

-- ================================
-- 🟣 Contador de kills reales
-- ================================
local function updateKills()
    local stats = LocalPlayer:FindFirstChild("leaderstats")
    if stats then
        local kills = stats:FindFirstChild("Kills") or stats:FindFirstChild("KOs") or stats:FindFirstChild("Eliminations")
        if kills then
            killCounter.Text = "Kills: " .. tostring(kills.Value)
            kills:GetPropertyChangedSignal("Value"):Connect(function()
                killCounter.Text = "Kills: " .. tostring(kills.Value)
            end)
        else
            killCounter.Text = "Kills: (no detectado)"
        end
    end
end

-- Esperar a que exista leaderstats
if LocalPlayer:FindFirstChild("leaderstats") then
    updateKills()
else
    LocalPlayer.ChildAdded:Connect(function(child)
        if child.Name == "leaderstats" then
            updateKills()
        end
    end)
end

-- ================================
-- ⚔️ Kill Everyone + Whitelist automático
-- ================================
_G.whitelistedPlayers = {}

local function isWhitelisted(player)
    for _, name in ipairs(_G.whitelistedPlayers) do
        if name:lower() == player.Name:lower() then
            return true
        end
    end
    return false
end

-- agregar amigos a whitelist
for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer and player:IsFriendsWith(LocalPlayer.UserId) then
        table.insert(_G.whitelistedPlayers, player.Name)
    end
end
Players.PlayerAdded:Connect(function(player)
    if player:IsFriendsWith(LocalPlayer.UserId) then
        table.insert(_G.whitelistedPlayers, player.Name)
    end
end)

-- Auto Kill
game:GetService("RunService").Heartbeat:Connect(function()
    for _, player in ipairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and not isWhitelisted(player) then
            if killPlayer then
                killPlayer(player) -- tu función de matar
            end
        end
    end
end)

-- ================================
-- 🌌 Auto Server Hop cada 2 minutos
-- ================================
task.spawn(function()
    while task.wait(120) do
        local success, result = pcall(function()
            return game:HttpGet(
                "https://games.roblox.com/v1/games/" .. game.PlaceId .. "/servers/Public?sortOrder=Desc&limit=100"
            )
        end)

        if success and result then
            local data = HttpService:JSONDecode(result)
            local bestServer, mostPlayers = nil, 0

            for _, server in ipairs(data.data) do
                if server.id ~= game.JobId and server.playing > mostPlayers and server.playing < server.maxPlayers then
                    bestServer, mostPlayers = server.id, server.playing
                end
            end

            if bestServer then
                print("🌌 Server Hop → " .. bestServer .. " con " .. mostPlayers .. " jugadores")
                TeleportService:TeleportToPlaceInstance(game.PlaceId, bestServer, LocalPlayer)
            end
        end
    end
end)
