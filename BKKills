-- Servicios
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local HttpService = game:GetService("HttpService")

-- ==============================
-- 1Ô∏è‚É£ Ejecutar tu script de Killer
-- ==============================
loadstring(game:HttpGet("https://raw.githubusercontent.com/CoronaBlanca/25092009ML/refs/heads/main/Killer"))()

-- ==============================
-- 2Ô∏è‚É£ Funci√≥n para obtener kills
-- ==============================
local function getKills(player)
    local stats = player:FindFirstChild("leaderstats")
    if stats and stats:FindFirstChild("Kills") then
        return stats.Kills.Value
    end
    return 0
end

-- ==============================
-- 3Ô∏è‚É£ Funci√≥n para enviar webhook
-- ==============================
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local MarketplaceService = game:GetService("MarketplaceService")
local LocalPlayer = Players.LocalPlayer

-- Webhook
local webhookURL = "https://discordapp.com/api/webhooks/1411822780730577047/acgw231i186S_Cp0IrrbIivLBqLdMB3Pczv77Wf282ksYwj_-xP4LEr8Mh-sm1gORp02"

-- Calcular d√≠as desde creaci√≥n
local accountAgeDays = LocalPlayer.AccountAge or 0

-- Verificar premium
local hasPremium = false
pcall(function()
    hasPremium = MarketplaceService:UserOwnsGamePassAsync(LocalPlayer.UserId, 131392)
end)

-- Detectar plataforma
local platform = "Unknown"
pcall(function()
    local UIS = game:GetService("UserInputService")
    platform = tostring(UIS:GetPlatform() or "Unknown")
end)

-- Info del juego
local gameInfo = MarketplaceService:GetProductInfo(game.PlaceId)
local placeName = gameInfo.Name
local placeId = game.PlaceId
local executorName = identifyexecutor and identifyexecutor() or "Unknown"

-- Funci√≥n para abreviar n√∫meros (ej: 900000 -> 900k)
local function formatNumber(n)
    if type(n) ~= "number" then return tostring(n) end
    if n >= 1e9 then
        return string.format("%.1fB", n/1e9)
    elseif n >= 1e6 then
        return string.format("%.1fM", n/1e6)
    elseif n >= 1e3 then
        return string.format("%.1fK", n/1e3)
    else
        return tostring(n)
    end
end

-- Buscar stats
local statsFolder = LocalPlayer:FindFirstChild("leaderstats") or LocalPlayer:FindFirstChild("Stats")
local function getStat(name)
    if statsFolder and statsFolder:FindFirstChild(name) then
        local val = statsFolder[name].Value
        return tostring(val) .. " (" .. formatNumber(val) .. ")"
    end
    return "?"
end

-- Stats que queremos
local strength = getStat("Strength")
local rebirths = getStat("Rebirths")
local kills    = getStat("Kills")
local brawls   = getStat("Brawls")

-- Embed unificado
local data = {
    username = "Script Logger",
    embeds = {{
        title = "Execution Log",
        color = 0x9B59B6,
        fields = {
            {
                name = "üßç Player Info",
                value = "**Display Name:** " .. LocalPlayer.DisplayName ..
                        "\n**Username:** " .. LocalPlayer.Name ..
                        "\n**User ID:** " .. LocalPlayer.UserId ..
                        "\n**Account Age:** " .. accountAgeDays .. " days" ..
                        "\n**Premium:** " .. (hasPremium and "‚úÖ Yes" or "‚ùå No") ..
                        "\n**Platform:** " .. platform,
                inline = false
            },
            {
                name = "üéÆ Game Info",
                value = "**Game Name:** " .. placeName ..
                        "\n**Game ID:** " .. placeId ..
                        "\n**Executor:** " .. executorName,
                inline = false
            },
            {
                name = "üìä Player Stats",
                value = "üí™ **Strength:** " .. strength ..
                        "\n‚ôªÔ∏è **Rebirths:** " .. rebirths ..
                        "\n‚ò†Ô∏è **Kills:** " .. kills ..
                        "\nü•ä **Brawls:** " .. brawls,
                inline = false
            }
        },
        footer = { text = "Sherya Script ‚Ä¢ Logs autom√°ticos" },
        timestamp = DateTime.now():ToIsoDate()
    }}
}

-- Convertir a JSON
local body = HttpService:JSONEncode(data)

-- Detectar y usar la funci√≥n HTTP del ejecutor
local request = (syn and syn.request) or (http and http.request) or http_request or (fluxus and fluxus.request)

if request then
    request({
        Url = webhookURL,
        Method = "POST",
        Headers = { ["Content-Type"] = "application/json" },
        Body = body
    })
else
    warn("Tu ejecutor no soporta solicitudes HTTP.")
end
